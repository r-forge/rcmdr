library(Rcmdr)
citation(package="Rcmdr")
?citation
help(package="Rcmdr")
toBibtex(citation(package="Rcmdr"))
citation(package="Rcmdr", auto=TRUE)
library(Rcmdr)
citation(package="Rcmdr")
update.packages("rgl")
update.packages()
y
update.packages(ask=FALSE)
install.packages("Matrix")
install.packages("mgcv")
library(Rcmdr)
citation(package="Rcmdr")
library(Rcmdr)
citation(package="Rcmdr")
library(Rcmdr)
citation(package="Rcmdr")
citation(package="zoo")
install.packages("Rcmdr")
citation(package="Rcmdr")
library(Rcmdr)
citation(package="Rcmdr")
library(Rcmdr)
citation(package="Rcmdr")
library(Rcmdr)
citation(package="Rcmdr")
citEntry
Rcmdr::FactorsP()
Rcmdr::factorsP
?.packages
library(Rcmdr)
args(initializeDialog)
args(variableListBox)
getRcmdr("variable.list.height")
args(OKCancelHelp)
args(dialogSuffix)
help(package="Rcmdr")
?license
args(initializeDialog)
library(Rcmdr)
args(initializeDialog)
help("Rcmdr.Utilities")
?nice
help(nice, package="effects")
effects:::nice
effects:::pretty
?pretty
Rcmdr::modelFormula
help(modelFormula, package="Rcmdr")
library(hetcor)
library(polycor)
?hetcor
example("hetcor")
library(multcomp)
help(package="multcomp")
help.search("simultaneous")
help.search("rcorr.adjust")
help("Utility.Functions", package="Rcmdr")
help("UtilityFunctions", package="Rcmdr")
help(package="Rcmdr")
library(RcmdrPlugin.survival)
debugonce(Rcmdr::summarizeDataSet)
debugonce(Rcmdr:::summarizeDataSet)
ls()
help("Rcmdr.Utilities", package="Rcmdr"
)
?Rcmdr.Utilities
?RcmdrUtilities
help("Rcmdr.Utilities", package="Rcmdr")
library(tcltk)
args(ttklabel)
update.packages(ask=FALSE)
install.packages("car")
help.search("tkspinbox")
mm <- matrix(rnorm(100), ncol = 10)
rn <- apply(mm, 1, prod)
rn
min <- max(mm)
min
min <- min(mm)
min
set.seed(12345)
mm <- matrix(rnorm(100), ncol = 10)
rn <- apply(mm, 1, prod)
min <- min(mm)
min
mm1 <- mm + abs(1.1*min)
head(mm1)
min(mm1)
lmm1 <- log(mm1)
s <-colSums(lmm1)
s <- exp(s)
s <- s - exp(abs(1.1*min)*nrow(mm))
s
set.seed(12345)
mm <- matrix(rnorm(100), ncol = 10)
rn <- apply(mm, 1, prod)
rn
min <- min(mm)
mm1 <- if (min < 0) mm + abs(1.1*min) else mm
lmm1 <- log(mm1)
s <-colSums(lmm1)
s <- exp(s)
s
s - abs(1.1*min)*10
s - abs(1.1*min)^10
library(car)
?scatterplot
example("scatterplot")
scatterplot(prestige ~ income, data=Prestige, smoother=quantregLine)
scatterplot(prestige ~ income, data=Prestige, smoother=quantregLine, lty=2)
library(rethinking)
282*2
update.packages(ask=FALSE)
update.packages(ask=FALSE)
